1. git的使用方式
  - 命令行 -- 常用 -- 推荐
  - 图形化软件（GUI）
  - IDE/编辑器插件

  (1) 命令行
    - git -v 查看版本
  
  (2) 设置邮箱即用户名
    - git config --global user.name "用户名"
      = 如果有空格需双引号反之无需
    - git config --global user.email "邮箱"
      = 如果有空格需双引号反之无需
    - git config --global credential.helper store
      = 保留密码，用户名下次无需输入
 

  (3) 作用域
    - 省略（local）：本地配置，只对本地仓库有效
    - --global：全局配置，所有仓库有效
    - --system：系统配置，对所有用户有效

  (4) 查看配置信息
    - git config --global --list
  
  (5) 调整默认分支名称
    - git config --global init.defaultBranch "名称"
      = 保留密码，用户名下次无需输入

2. 创建仓库
  - git init 在本地创建仓库
  - git clone 在github中克隆仓库到本地
  - git init 名字 在当前目录创建/导入<名字>文件夹而且创建仓库

3. 工作区域和文件状态

  (1)工作区域
    - 工作区
    - 暂存区
    - 本地仓库

  (2) 文件状态
    - 未跟踪   -- 没有被git管理的文件。
    - 未修改   -- 已被git管理，没有被改文件。
    - 已修改   -- 已经修改过了，没有被添加到暂存区里。
    - 已暂存   -- 已经修改过了，已添加到暂存区里。
    - 已提交   -- 已经提交过的文件。

4. 添加和提交文件
	
  (1) 需要用到的命令
    - git init 创建仓库
    - git status 查看仓库命令
    - git add 添加到暂存区
    - git commit 提交
    - git log 查看提交记录

  (2) 基础命令使用方式
    - git add   -- 提交文件
      = git add xxx.xxx   -- 提交 xxx.xxx 
        = 多个文件可使用空格分开，可使用通配符。 = 
    - git rm --cached <file>...   -- 取消文件至暂存区
    - git commit   -- 提交文件
      = 注意：git commit 只会提交暂存区的文件
      = git commit -m "提交信息"  
        = 如果不写 -m 就会进入 vim 来编辑提交信息 =
    - git log   -- 查看提交记录
      = git log -- oneline   -- 查看简洁的提交记录
  (3)
  (4)












































































